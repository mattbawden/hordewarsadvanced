@use 'k-scaffold' as k;
@use './variables';
@use './components';
@use './sections';


html {
  // Specify the base font size of the sheet
  // This affects what 1rem is equal to as well as what the inherited font sizes are.
  font-size: 16px;
}
body{
  @include variables.all;
  // While these SHOULD be inherited from the html, we need to override some Roll20 styling
  color: var(--fontColor);
  font-size: 1rem;
  .ui-dialog{
    .nav-tabs {
      // Apply positioning to the Roll20 sheet nav bar so the 
      // nav bar sticks to the top of the sheet.
      // Remove the next 4 lines if you don't want this behavior
      position: sticky;
      top: 0;
      z-index: 1000;
      background-color:var(--backColor);
      a{
        // extend our font selection to the Roll20 interface
        font-family:var(--font3);
      }

    }
    .tab-content{
      .charsheet{
        // Include the default k-scaffold styles, including the Roll20Clear. This also ensures all of our elements are setup to inherit style properties where possible.
        @include k.defaultStyles;
        // Include the styles for each of our components and sections. Note that sections are listed last so that they override the component styles if necessary.
        @include components.all;
        @include sections.all;
        // Do any other generic styling that you need for your project
        #main{
          .image-logo{
            display: block;
            margin: auto;
            width: 50%;
          }
          .tabs{
            display:block;
          }
          .tabs__header{
            display: block;
            margin: auto;
            width: 50%;
          }
          .tabs__button{
            color:var(--fontColor);
            font-style: normal;
            border: 1px solid #dddddd;
            border-radius: 4px 4px 0 0;
            box-shadow: none;
            padding: 9px 12px;
            height: 16px;
          }
          button:not(.k-active-tab):hover{
            background-color: green;
            color: white;
          }
          .k-active-button{
            background-color: black;
            color: white;
          }
          .tabs__container{
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 20px 20px;
            justify-items: start;
          }
          .input-label__text{
            background-color: black;
            color: white;
            padding: 4px 8px;
            font-weight: bold;
            border: 1px solid black;
          }
          .input-label__input{
            padding: 4px 8px;
            border: 1px solid black;
          }
          .fill-box{
            padding: 4px 8px;
            border: 1px solid black;
          }
          .fill-left__radio{
            padding: 1px;
            border: 1px solid black;
          }
          .attribute-grid{
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr 20px;
            border: 1px solid black;
          }
          .attribute-label{
            background-color: gray;
            padding: 4px 8px;
            font-weight: bold;
            border: 1px solid black;
          }
          .attribute-input{
            width: 100%;
            padding: 4px 8px;
            border: 1px solid black;
          }
          .span2{
            grid-column: 1 / span 2;
          }
          .startspan3{
            grid-column: 1 / span 3;
          }
          .span3{
            grid-column: 2 / span 3;
          }
          .span4{
            grid-column: 2 / span 4;
          }
          .header-label{
            text-align: center;
            background-color: black;
            color: white;
            padding: 4px 8px;
            font-weight: bold;
            border: 1px solid black;
          }
          .skill-grid{
            display: grid;
            grid-template-columns: 1fr 1fr 1fr 1fr 20px;
            grid-template-rows: min-content;
            border: 1px solid black;
          }
          .initiative-grid{
            display: grid;
            grid-template-columns: 100px 20px;
            grid-template-rows: min-content;
            column-gap: 10px;
          }
          .weapon-grid{
            display: grid;
            grid-template-columns: 1fr 1fr 20px;
            grid-template-rows: min-content;
            row-gap: 10px;
          }
          .equipment-grid{
            display: grid;
            grid-template-rows: min-content;
            row-gap: 10px;
            grid-template-columns: 1fr 1fr 1fr;
          }
          .equipment-grid .input-label__input{
            width: 50%;
          }
          .grid-left{
            justify-self: start;
          }
          .skill-label{
            background-color: gray;
            padding-left: 4px;
            font-weight: bold;
            border: 1px solid black;
          }
          .skill-input{
            width: 100%;
            padding: 4px 8px;
            border: 1px solid black;
          }
          .adaptive--text{
            width: 100%;
          }
          .adaptive--text__textarea{
            width: 100%;
            padding: 4px 8px;
            border: 1px solid black;
          }
          .other-attributes{
            display: flex;
            flex-direction: column;
            width: 100%;
            row-gap: 10px;
          }
          .other-elements{
            display: flex;
            flex-direction: column;
            width: 100%;
            row-gap: 10px;
            column-gap: 5px;
          }
          .other-block{
            display: flex;
            flex-direction: column;
            width: 100%;
            row-gap: 10px;
          }
          .roll-button{
            display: block;
            width: 20px;
            border: 1px solid black;
            background-color: gray;
            font-weight: bold;
            text-align: center;
          }
          button[type=roll].roll-button::before{
            font-family: 'dicefontd12';
            content: "0";
          }
          .radio-container{
            /* style the layout and whatnot of the radio container as you need to */
            display: flex;
            gap: 0.5rem;
          }
          .radio-input{
            /* appearance none allows us to style radios and checkboxes as if they were divs */
            appearance: none;
            /* Style the radio as you want for it's unchecked state */
            border-radius: 50%;
            border: 1px solid black;
            width: 10px;
            height: 10px;
            display: block;
          }
          /* If the radiobox is checked, or if it has a checked radiobox after it, style it as if it was checked */
          .radio-input:checked,
          .radio-input:has(~ .radiobox:checked){
            /* Style the check state as you want */
            background-color: black;
          }
        }
      }
    }
  }
  &.sheet-darkmode{
    color: black;
  }
}